{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"get",
				"get_sq_power\tfunction"
			],
			[
				"mul",
				"multiprocessing\tmodule"
			],
			[
				"The",
				"Thread\tclass"
			],
			[
				"the",
				"threading\tmodule"
			],
			[
				"up",
				"update_data\tfunction"
			],
			[
				"re",
				"res_val\tstatement"
			],
			[
				"print",
				"print_grid"
			],
			[
				"op",
				"opcodes\tstatement"
			],
			[
				"po",
				"poss_map\tstatement"
			],
			[
				"__d",
				"__doc__\tinstance"
			],
			[
				"_",
				"__name__"
			],
			[
				"n",
				"n_gt2\tstatement"
			],
			[
				"li",
				"list\tclass"
			],
			[
				"na",
				"namedtuple\tfunction"
			],
			[
				"pr",
				"PrettyPrinter"
			],
			[
				"req",
				"requests"
			],
			[
				"HTTP",
				"HTTP20Adapter\tclass"
			],
			[
				"elf",
				"n_elf"
			],
			[
				"No",
				"NotImplemented\tinstance"
			],
			[
				"enti",
				"entity"
			],
			[
				"en",
				"entity"
			],
			[
				"enem",
				"enemy\tstatement"
			],
			[
				"del",
				"delta_x\tstatement"
			],
			[
				"y",
				"y_dist\tstatement"
			],
			[
				"entit",
				"entity"
			],
			[
				"move",
				"move_x\tstatement"
			],
			[
				"x",
				"x_dist\tstatement"
			],
			[
				"ene",
				"entities\tstatement"
			],
			[
				"max",
				"maxsize\tparam"
			],
			[
				"N",
				"namedtuple\tfunction"
			],
			[
				"no",
				"no_plant"
			],
			[
				"min",
				"min_i\tstatement"
			],
			[
				"las",
				"last_s\tstatement"
			],
			[
				"has",
				"has_plants"
			],
			[
				"line",
				"linecache\tmodule"
			],
			[
				"pp",
				"pprint\tfunction"
			],
			[
				"sq",
				"sq_size\tparam"
			],
			[
				"compl",
				"complete_run\tfunction"
			],
			[
				"run",
				"run_once\tfunction"
			],
			[
				"refe",
				"refresh\tstatement"
			],
			[
				"wrt",
				"write_history_file\tfunction"
			],
			[
				"his",
				"histfile_size\tstatement"
			],
			[
				"Adv",
				"AdventShell\tclass"
			],
			[
				"poi",
				"points\tparam"
			],
			[
				"xm",
				"x_min\tstatement"
			],
			[
				"m",
				"m_d\tstatement"
			],
			[
				"poit",
				"points"
			],
			[
				"d",
				"do_run\tfunction"
			],
			[
				"set",
				"set_prompt\tfunction"
			],
			[
				"Key",
				"KeyboardInterrupt\tclass"
			],
			[
				"excp",
				"excepthook"
			],
			[
				"insrt",
				"insort"
			],
			[
				"ascii",
				"ascii_uppercase\tstatement"
			],
			[
				"def",
				"defaultdict\tclass"
			],
			[
				"de",
				"deque〔class〕"
			],
			[
				"cur",
				"curr_p"
			],
			[
				"defaul",
				"defaults\tparam"
			],
			[
				"slee",
				"sleep_re〔variable〕"
			],
			[
				"claim",
				"claim_re"
			],
			[
				"node",
				"node_sum"
			],
			[
				"met",
				"meta_sum"
			],
			[
				"can",
				"can_do"
			],
			[
				"bash",
				"bash_aliases"
			],
			[
				"ca",
				"can_do"
			],
			[
				"coord",
				"coord_re"
			],
			[
				"ins",
				"instructions"
			],
			[
				"off",
				"offset_y"
			],
			[
				"i",
				"IndexError〔class〕"
			],
			[
				"with",
				"within_10k"
			],
			[
				"ma",
				"max_x"
			],
			[
				"coor",
				"coord_re"
			],
			[
				"lowe",
				"lowest"
			],
			[
				"low",
				"lowest"
			],
			[
				"new",
				"new_len"
			],
			[
				"lo",
				"lowercase〔variable〕"
			],
			[
				"data",
				"data_file"
			],
			[
				"write",
				"write_text"
			],
			[
				"max_",
				"max_n"
			],
			[
				"curr",
				"curr_min"
			],
			[
				"log",
				"log_entry"
			],
			[
				"fabric",
				"fabric1〔variable〕"
			],
			[
				"cla",
				"claim1"
			],
			[
				"fab",
				"fabric1〔variable〕"
			],
			[
				"clam",
				"claim_regex〔variable〕"
			],
			[
				"Se",
				"SequenceMatcher"
			],
			[
				"c",
				"char_has_n"
			],
			[
				"I",
				"Iterable"
			],
			[
				"item",
				"item_obj"
			],
			[
				"quan",
				"quantity"
			],
			[
				"shop",
				"shop_items"
			],
			[
				"doc_",
				"doc_ids"
			],
			[
				"doc",
				"doc_ids"
			],
			[
				"ite",
				"item_id"
			],
			[
				"s",
				"strftime〔function〕"
			],
			[
				"extend",
				"extend_tinydb〔function〕"
			],
			[
				"db",
				"db_file〔variable〕"
			],
			[
				"ba",
				"basket"
			],
			[
				"sh",
				"shelve"
			],
			[
				"add",
				"add_item"
			],
			[
				"pass",
				"pass_context"
			],
			[
				"if",
				"ifmain\tif __name__ == '__main__'"
			],
			[
				"in",
				"insort\tstatement"
			],
			[
				"Funge",
				"FungeSpace"
			]
		]
	},
	"buffers":
	[
		{
			"file": "2018/day_12.py",
			"settings":
			{
				"buffer_size": 1454,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "cd #!/usr/bin/env python3.7\n\"\"\"--- Day 10: The Stars Align ---\"\"\"\nimport re\n\n\nclass Point:\n    def __init__(self, x, y, vx, vy) -> None:\n        self.x = x\n        self.y = y\n        self.vx = vx\n        self.vy = vy\n\n    def move(self):\n        self.x += self.vx\n        self.y += self.vy\n\n    def __repr__(self):\n        return f\"<Point {self.x},{self.y} ({self.vx},{self.vy})>\"\n\n\ndef pmax(points):\n    x_max = max(p.x for p in points)\n    y_max = max(p.y for p in points)\n    return x_max + 1, y_max + 1\n\n\ndef pmin(points):\n    x_min = min(p.x for p in points)\n    y_min = min(p.y for p in points)\n    return x_min, y_min\n\n\nif __name__ == \"__main__\":\n    regex = r\"<(.+),(.+)>.+<(.+),(.+)>\"\n    with open(\"input_data/day_10\") as f:\n        points = [Point(*map(int, x)) for x in re.findall(regex, f.read(), re.M)]\n\n    # move points until height of grid < 50\n    t = 0\n    while pmax(points)[1] - pmin(points)[1] > 50:\n        for point in points:\n            point.move()\n        t += 1\n\n    # print couple next iterations to visually find message\n    for _ in range(4):\n        for point in points:\n            point.move()\n\n        x_max, y_max = pmax(points)\n        x_min, y_min = pmin(points)\n        field = [[\".\"] * (x_max - x_min) for _ in range(y_max - y_min)]\n\n        for point in points:\n            field[point.y - y_min][point.x - x_min] = \"@\"\n\n        t += 1\n        print(f\"    {x_min} -> {x_max}\")\n        for i, row in enumerate(field):\n            print(i + y_min, \"\".join(row))\n        print(\"tick:\", t, \"\\n\")\n",
			"file": "2018/day_10.py",
			"file_size": 1531,
			"file_write_time": 131891367668930987,
			"settings":
			{
				"buffer_size": 1534,
				"line_ending": "Unix"
			}
		},
		{
			"file": "2018/day_11.py",
			"settings":
			{
				"buffer_size": 747,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"mcc",
				"Anaconda: McCabe complexity check"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"linting",
				"SublimeCodeIntel: Enable Live Autocompletion for Current Language"
			],
			[
				"start",
				"Sublack: Start Blackd Server"
			],
			[
				"convert",
				"Convert Case: PascalCase"
			],
			[
				"emoji",
				"Emoji: Insert Emoji"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"in",
				"Package Control: Install Package"
			],
			[
				"gitgutter sett",
				"Preferences: GitGutter Settings"
			],
			[
				"gutter",
				"Preferences: GitGutter Settings"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"disable",
				"Package Control: Disable Package"
			],
			[
				"git gutter dis",
				"GitGutter: Disable for View"
			],
			[
				"sublimelinter",
				"Preferences: SublimeLinter Settings"
			],
			[
				"start ",
				"Sublack: Start Blackd Server"
			],
			[
				"stop",
				"Sublack: Stop Blackd Server"
			],
			[
				"color",
				"UI: Select Color Scheme"
			],
			[
				"intel",
				"SublimeCodeIntel: Enable Live Autocompletion for Current Language"
			],
			[
				"blackd",
				"Sublack: Start Blackd Server"
			],
			[
				"python",
				"Set Syntax: Python"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"python ",
				"Set Syntax: Python"
			],
			[
				"pyth",
				"Set Syntax: Python"
			],
			[
				"bl",
				"Sublack: Start Blackd Server"
			],
			[
				"install ",
				"Package Control: Install Package"
			],
			[
				"linter",
				"Preferences: SublimeLinter Settings"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"bash",
				"Set Syntax: Bourne Again Shell (bash)"
			],
			[
				"jinja",
				"Set Syntax: Jinja2"
			],
			[
				"black",
				"Sublack: Format all"
			],
			[
				"blak",
				"Sublack: Toggle black on save for current view"
			],
			[
				"theme",
				"UI: Select Color Scheme"
			],
			[
				"lnter re",
				"SublimeLinter: Reload SublimeLinter and its Plugins"
			],
			[
				"sublimelinter ",
				"Preferences: SublimeLinter Settings"
			],
			[
				"packa",
				"Package Control: Remove Package"
			],
			[
				"linter setting",
				"Preferences: SublimeLinter Settings"
			],
			[
				"random:",
				"Random:UUID"
			],
			[
				"conda lint",
				"Anaconda: Disable linting on this file"
			],
			[
				"scope",
				"Toggle ScopeAlways"
			],
			[
				"bracket qui",
				"BracketHighlighter: Quick Start Guide"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"spaces",
				"Indentation: Convert to Spaces"
			],
			[
				"subl",
				"Sublack: Toggle black on save for current view"
			],
			[
				"lint",
				"Anaconda: Disable linting on this file"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 432.0,
		"history":
		[
			"exit()",
			"print(locals())",
			"print('test')",
			"import urllib.request,os,hashlib; h = '6f4c264a24d933ce70df5dedcf1dcaee' + 'ebe013ee18cced0ef93d5f746d80ef60'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/mnt/c/Users/Jaxdi/Documents/py_stuff/advent"
	],
	"file_history":
	[
		"/mnt/c/Users/Jaxdi/Documents/py_stuff/advent/2018/input_data/day_10",
		"/mnt/c/Users/Jaxdi/Documents/py_stuff/advent/2018/day_18.py",
		"/mnt/c/Users/Jaxdi/Documents/py_stuff/advent/2018/day_15.py",
		"/mnt/c/Users/Jaxdi/Documents/py_stuff/advent/2018/day_14.py",
		"/mnt/c/Users/Jaxdi/Documents/py_stuff/advent/2018/day_13.py",
		"/mnt/c/Users/Jaxdi/Documents/py_stuff/advent/2018/input_data/day_12",
		"/mnt/c/Users/Jaxdi/Documents/py_stuff/advent/2018/day_16.py",
		"/mnt/c/Users/Jaxdi/Documents/py_stuff/advent/2018/input_data/day_18_test",
		"/mnt/c/Users/Jaxdi/Documents/py_stuff/advent/2018/input_data/day_18",
		"/mnt/c/Users/Jaxdi/Documents/py_stuff/advent/2018/input_data/day_16",
		"/mnt/c/Users/Jaxdi/Documents/py_stuff/advent/advent.py",
		"/mnt/c/Users/Jaxdi/Documents/py_stuff/advent/2018/day_7.py",
		"/home/jay/Jaxdi/Desktop/font.reg",
		"/mnt/c/Users/Jaxdi/Documents/py_stuff/advent/2018/input_data/day_15",
		"/mnt/c/Users/Jaxdi/Documents/py_stuff/advent/2018/input_data/day_14",
		"/mnt/c/Users/Jaxdi/Documents/py_stuff/advent/2018/input_data/day_13_test",
		"/mnt/c/Users/Jaxdi/Documents/py_stuff/advent/2018/input_data/day_13",
		"/mnt/c/Users/Jaxdi/Documents/py_stuff/advent/2018/day_12.py",
		"/mnt/c/Users/Jaxdi/Documents/py_stuff/advent/2018/input_data/day_12_test",
		"/mnt/c/Users/Jaxdi/Documents/py_stuff/advent/2018/day_1.py",
		"/mnt/c/Users/Jaxdi/Documents/py_stuff/advent/2018/day_2.py",
		"/mnt/c/Users/Jaxdi/Documents/py_stuff/advent/2018/day_3.py",
		"/mnt/c/Users/Jaxdi/Documents/py_stuff/advent/2018/day_4.py",
		"/mnt/c/Users/Jaxdi/Documents/py_stuff/advent/2018/day_5.py",
		"/mnt/c/Users/Jaxdi/Documents/py_stuff/advent/2018/day_6.py",
		"/mnt/c/Users/Jaxdi/Documents/py_stuff/advent/2018/day_8.py",
		"/mnt/c/Users/Jaxdi/Documents/py_stuff/advent/2018/day_9.py",
		"/mnt/c/Users/Jaxdi/Documents/py_stuff/advent/2018/day_10.py",
		"/mnt/c/Users/Jaxdi/Documents/py_stuff/advent/2018/day_11.py",
		"/mnt/c/Users/Jaxdi/Documents/py_stuff/advent/2018/.gitignore",
		"/mnt/c/Users/Jaxdi/Documents/py_stuff/advent/.advent_history",
		"/mnt/c/Users/Jaxdi/Documents/py_stuff/advent/2018/input_data/day_3",
		"/mnt/c/Users/Jaxdi/Documents/py_stuff/advent/2018/input_data/day_2",
		"/mnt/c/Users/Jaxdi/Documents/py_stuff/advent/2018/input_data/day_1",
		"/mnt/c/Users/Jaxdi/Documents/py_stuff/advent/2018/input_data/day_7_test",
		"/mnt/c/Users/Jaxdi/Documents/py_stuff/advent/2018/input_data/day_7_alt",
		"/mnt/c/Users/Jaxdi/Documents/py_stuff/advent/2018/input_data/day_11",
		"/mnt/c/Users/Jaxdi/Documents/py_stuff/advent/ash.py",
		"/home/jay/.config/sublime-text-3/Packages/User/Anaconda.sublime-settings",
		"/mnt/c/Users/Jaxdi/Documents/py_stuff/advent/spiral.cmd",
		"/mnt/d/Jaxdi/Documents/config.xlaunch",
		"/home/jay/.config/sublime-text-3/Packages/SublimeLinter/SublimeLinter.sublime-settings",
		"/home/jay/.config/sublime-text-3/Packages/User/Python3.7.sublime-build",
		"/home/jay/jdk-8u191-linux-x64.tar.gz",
		"/mnt/c/Users/Jaxdi/Documents/py_stuff/app/helloworld/android/gradlew.bat",
		"/mnt/c/Users/Jaxdi/Documents/py_stuff/app/helloworld/LICENSE",
		"/mnt/c/Users/Jaxdi/Documents/py_stuff/app/helloworld/.gitignore",
		"/mnt/c/Users/Jaxdi/Documents/py_stuff/app/tut0/javainfo.py",
		"/mnt/c/Users/Jaxdi/Documents/py_stuff/app/tut0/example.py",
		"/mnt/c/Users/Jaxdi/Documents/py_stuff/app/tut0/python/example.class",
		"/home/jay/.zshrc",
		"/mnt/c/Users/Jaxdi/Documents/py_stuff/advent/2018/input_data/day_\u001b[B",
		"/mnt/c/Users/Jaxdi/Documents/py_stuff/advent/2018/advent2018.sublime-project",
		"/mnt/c/Users/Jaxdi/Documents/py_stuff/advent/2018/selectAll",
		"/mnt/c/Users/Jaxdi/Documents/py_stuff/advent/2018/day_",
		"/mnt/c/Users/Jaxdi/Documents/py_stuff/advent/2018/0",
		"/mnt/c/Users/Jaxdi/Documents/py_stuff/advent/2018/input_data/day_9",
		"/mnt/c/Users/Jaxdi/Documents/py_stuff/advent/2018/input_data/day_7",
		"/mnt/c/Users/Jaxdi/Documents/py_stuff/advent/2018/input_data/day_4",
		"/mnt/c/Users/Jaxdi/Documents/py_stuff/advent/2018/input_data/day_5",
		"/mnt/c/Users/Jaxdi/Documents/py_stuff/advent/2018/advent.py",
		"/home/jay/.config/sublime-text-3/Packages/Git/Git.sublime-settings",
		"/mnt/c/Users/Jaxdi/Documents/py_stuff/advent/2018/input_data/day_8",
		"/home/jay/.bash_aliases",
		"/home/jay/.ansiweatherrc",
		"/mnt/c/Users/Jaxdi/Documents/py_stuff/dcp/shop.json",
		"/home/jay/.config/sublime-text-3/Packages/Jedi - Python autocompletion/sublime_jedi.sublime-settings",
		"/home/jay/.config/sublime-text-3/Packages/User/sublime_jedi.sublime-settings",
		"/mnt/c/Users/Jaxdi/Documents/py_stuff/advent/2018/input_data/day_6",
		"/mnt/c/Users/Jaxdi/Documents/py_stuff/advent/2018/help",
		"/mnt/c/Users/Jaxdi/Documents/py_stuff/advent/2018/new_file.j2",
		"/home/jay/.config/tint2/tint2rc",
		"/home/jay/gnupgshell/README",
		"/mnt/c/Users/Jaxdi/alacritty.yml",
		"/mnt/c/Users/Jaxdi/Documents/py_stuff/advent/2018/test.py",
		"/mnt/c/Users/Jaxdi/Documents/py_stuff/advent/2018/test",
		"/mnt/c/Users/Jaxdi/Documents/py_stuff/befunge/instructions.py",
		"/mnt/c/Users/Jaxdi/Documents/py_stuff/advent/2018/day_2_input",
		"/home/jay/py_stuff/pyvid/pyvid/day_2_input",
		"/home/jay/un.txt",
		"/home/jay/.zfunc/_poetry",
		"/home/jay/py_stuff/dcp/shop.json",
		"/home/jay/py_stuff/todo/todo/templates/items/list.jinja2",
		"/home/jay/py_stuff/todo/todo/controllers/base.py",
		"/home/jay/py_stuff/advent/2018/day_1_input",
		"/home/jay/py_stuff/dcp/shop.py",
		"/home/jay/py_stuff/dcp/34_thirty_four.py",
		"/home/jay/py_stuff/dcp/20_twenty.py",
		"/home/jay/py_stuff/dcp/conv_names.py",
		"/home/jay/py_stuff/dcp/thirty_three.py"
	],
	"find":
	{
		"height": 27.0
	},
	"find_in_files":
	{
		"height": 193.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"Process",
			"Pool",
			"process",
			"Thread",
			"and ",
			"update",
			"eq",
			"bor",
			"ban",
			"banr",
			"opcode",
			"scores",
			"_d"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "2018/day_12.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1454,
						"regions":
						{
						},
						"selection":
						[
							[
								139,
								139
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": ".",
									"selector": "source.python - string - comment - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								}
							],
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"git_gutter_is_enabled": true,
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "2018/day_10.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1534,
						"regions":
						{
						},
						"selection":
						[
							[
								3,
								3
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"git_gutter_is_enabled": true,
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "2018/day_11.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 747,
						"regions":
						{
						},
						"selection":
						[
							[
								95,
								95
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": ".",
									"selector": "source.python - string - comment - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								}
							],
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"git_gutter_is_enabled": true,
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 27.0
	},
	"input":
	{
		"height": 80.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.SublimeLinter":
	{
		"height": 121.0
	},
	"output.SublimeLinter Messages":
	{
		"height": 121.0
	},
	"output.exec":
	{
		"height": 213.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.mdpopups":
	{
		"height": 0.0
	},
	"pinned_build_system": "Packages/User/Python3.7.sublime-build",
	"project": "aoc.sublime-project",
	"replace":
	{
		"height": 50.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"10p",
				"2018/day_10.py"
			],
			[
				"10",
				"2018/input_data/day_10"
			],
			[
				"18",
				"2018/day_18.py"
			],
			[
				"11",
				"2018/day_11.py"
			],
			[
				"12",
				"2018/day_12.py"
			],
			[
				"13",
				"2018/day_13.py"
			],
			[
				"14",
				"2018/day_14.py"
			],
			[
				"15",
				"2018/day_15.py"
			],
			[
				"16",
				"2018/day_16.py"
			],
			[
				"ad\t",
				"advent.py"
			],
			[
				"7",
				"2018/day_7.py"
			],
			[
				"main",
				"main.py"
			],
			[
				"test",
				"2018/input_data/day_12_test"
			],
			[
				"adv",
				"advent.py"
			],
			[
				"5",
				"2018/day_5.py"
			],
			[
				"8",
				"2018/day_8.py"
			],
			[
				"9",
				"2018/day_9.py"
			],
			[
				"ad",
				"advent.py"
			],
			[
				"6",
				"2018/day_6.py"
			],
			[
				"4",
				"2018/day_4.py"
			],
			[
				"3",
				"2018/day_3.py"
			],
			[
				"2",
				"2018/day_2.py"
			],
			[
				"day1",
				"2018/day_1.py"
			],
			[
				".giti",
				"2018/.gitignore"
			],
			[
				"da4",
				"day_4.py"
			],
			[
				"day9",
				"day_9.py"
			],
			[
				"9 inpu",
				"input_data/day_9"
			],
			[
				"day2",
				"day_2.py"
			],
			[
				"dy1",
				"day_1.py"
			],
			[
				"1",
				"day_1.py"
			],
			[
				"adve\t",
				"advent.py"
			],
			[
				"day7",
				"input_data/day_7"
			],
			[
				"day 7",
				"input_data/day_7"
			],
			[
				"day4",
				"day_4.py"
			],
			[
				"day",
				"day_6.py"
			],
			[
				"day6",
				"day_6.py"
			],
			[
				"",
				"input_data/day_4"
			],
			[
				"data 4",
				"input_data/day_4"
			],
			[
				"day_6",
				"day_6.py"
			],
			[
				"day5",
				"day_5.py"
			],
			[
				"day_5\t",
				"day_5.py"
			],
			[
				"dve",
				"advent.py"
			],
			[
				"items.jinj",
				"todo/templates/items/list.jinja2"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": false,
	"side_bar_width": 212.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
